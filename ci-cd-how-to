CI stands for Continuous Integration and CD stands for Continuous Delivery/Continuous Deployment. 
You can think of it as a process similar to a software development lifecycle.

Imagine you're going to build a web application which is going to be deployed on live web servers. 
You will have a set of developers responsible for writing the code, who will further go on and build the web application. 
Now, when this code is committed into a version control system (such as git, svn) by the team of developers. 
Next, it goes through the build phase, which is the first phase of the pipeline, where developers put in their code and then again the code goes to the version control system with a proper version tag.

Once the build phase is over, then you move on to the testing phase. In this phase, we have various kinds of testing. 
One of them is the unit test (where you test the chunk/unit of software or for its sanity test).

When the test is completed, you move on to the deploy phase, where you deploy it into a staging or a test server. 
Here, you can view the code or you can view the app in a simulator.

Once the code is deployed successfully, you can run another sanity test. 
If everything is accepted, then it can be deployed to production.

Meanwhile, in every step, if there is an error, you can shoot an email back to the development team so that they can fix it. 
Then they will push it into the version control system and it goes back into the pipeline.

Once again, if there is any error reported during testing, the feedback goes to the dev team again, where they fix it and the process reiterates if required.

This lifecycle continues until we get code/a product which can be deployed to the production server where we measure and validate the code.
